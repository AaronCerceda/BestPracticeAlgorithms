/* MAX CHAR ALGORITHM */

function maxChar(string) {

    let charMap = {}; // Empty object
    let max  = 0;
    let maxChar = '';

    for(let char of string) {

        if(charMap[char]) {
            charMap[char]++;
        }
        else {
            charMap[char] = 1;
        }

    }

    for(let char in charMap) {
        if(charMap[char] > max) {
            max = charMap[char];
            maxChar = char;
        }
    }

    return maxChar;

    /* for in loops over enumerable property names of an object   */

    /* for of (new in ES6) does use an object-specific-iterator and loops over the values generated by that */


}


//console.log(maxChar("hheeeeeellloooooooooooooo"));

/* FIZZBUZZ ALGORITHM */

function fizzBuzz(num) {

    for(let i = 1; i <= num; i++) {

        //Is the number a multiple of 3 and 5 ?
        if(i % 3 === 0 && i % 5 === 0) {
            console.log("fizzBuzz");
        }
        else if(i % 3 === 0) {
            //Is the number  a multiple of 3 ?
            console.log('Fizz');
        }
        else if(i % 5 === 0) {
            console.log('Buzz');
        }
        else {
            console.log(i);
        }

    }

}

/* 

ARRAY CHUNKING

Given an array and chunk size, divide the array into many subarrays where each subarray is of length size   

Examples

chunk([1,2,3,4,5,6,7,8], 3) --> [[1,2,3], [4,5,6], [7,8]]
chunk([1,2,3,4], 2) --> [[,1,2], [3,4]]

*/

function chunk(array, size) {

    let chunked = []; //Hold the new chunked array 

    for(let element of array) { 

        let last = chunked[chunked.length - 1]; //Save the last element in the array

       // console.log(last);

        if(!last || last.length === size) {
            chunked.push([element]);
        }
        else {
            last.push(element);
        } 

    }

    return chunked;

}

/* SECOND SOLUTION OF CHUNK ARRAY ALGORITHM, THIS IS FASTER THAN FIRST ONE */

function chunk2(array, size) {

    let chunked = [];
    let index = 0;

    while(index < array.length) {
        chunked.push(array.slice(index, index + size));
        index += size;
    }

    return chunked;

 }


 function longestWord2(string) {
  
    let newString = string.split(' '); 
    let longestWord = 0; //Init in 0
    let position = 0;
    
    for(let i = 0; i <= newString.length - 1; i++) {
          if(newString[i].length > longestWord) {
              longestWord = newString[i].length;
              position = i;
        }
      
    }
    
    return newString[position];
    
  }

  function letterchanges(str) {

    let alph = 'abcdefghijklmnopqrstuvwxyz';
    var finalWord = '';

    for(let i = 0; i <= str.length - 1; i++) {
        
        for(let j = 0; j <= alph.length - 1; j++) {
            
            if(str[i] == alph[j]) {
                finalWord = finalWord + alph[j + 1];
            }

        }

        if(str[i] == " ") {
            finalWord+= " ";
        }

    }

    finalWord = finalWord.replace(/([aeiou])/g, (c) => { //REGEX 
        return c.toUpperCase();
    });

    
  }


  function timeConverter(time) {

    let hours = Math.floor(time / 60);
    let process = (time / 60) % 1 * 60;
    let minutes = Math.round(process);

    let finalResult = hours + ":" + minutes;
    console.log(finalResult);
  }

  timeConverter(121);

  //letterchanges("fun times!");
 //console.log(longestWord2("5345416416514654146 mundo amigos"));

//console.log(chunk([1,2,3,4,5,6,7], 2));

